<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on deadnull</title>
    <link>https://blog.ronvalente.net/</link>
    <description>Recent content in Home on deadnull</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.ronvalente.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrate to Hugo and Org Mode</title>
      <link>https://blog.ronvalente.net/posts/migrate-to-hugo/</link>
      <pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ronvalente.net/posts/migrate-to-hugo/</guid>
      <description>First Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam suscipit, nibh in gravida iaculis, massa tortor interdum turpis, eu semper dolor velit quis nisl. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vestibulum viverra at nulla quis sodales. Aliquam imperdiet ex non felis tempus imperdiet. Duis dapibus massa non enim molestie, sit amet finibus nunc iaculis. Aenean faucibus, ante vitae aliquet tempor, nisl magna ultricies orci, sed euismod magna nisi non velit.</description>
    </item>
    
    <item>
      <title>PostgreSQL Fault Tolerance</title>
      <link>https://blog.ronvalente.net/posts/postgresql-fault-tolerance/</link>
      <pubDate>Sat, 04 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ronvalente.net/posts/postgresql-fault-tolerance/</guid>
      <description>Before we get started I want to go over what it means to be highly available/fault tolerant. To have a pair of machines (the minimum!) in a cluster that provides redundancy to a service or set of services. High availability is usually accomplished by a cluster framework like the one we will be using in this post. That being said there are a lot of tutorials online that show a partial implementation of this setup.</description>
    </item>
    
    <item>
      <title>Puppet Fault Tolerance</title>
      <link>https://blog.ronvalente.net/posts/puppet-fault-tolerance/</link>
      <pubDate>Tue, 01 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ronvalente.net/posts/puppet-fault-tolerance/</guid>
      <description>Puppet is an infrastructure and configuration management tool-set that no only unifies the management of multiple machines across multiple platforms. It allows for knowledge sharing, elimination of repetition, increase portability of configurations because it is platform agnostic. This is done by overlaying a domain-specific language (DSL) on top that can be shared across multiple systems, platforms, and architectures. By doing this you turn things like yum install and apt-get install into</description>
    </item>
    
  </channel>
</rss>